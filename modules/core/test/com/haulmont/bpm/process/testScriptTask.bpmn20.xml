<?xml version="1.0" encoding="UTF-8" ?>

<!--
  ~ Copyright (c) 2008-2016 Haulmont. All rights reserved.
  ~ Use is subject to license terms, see http://www.cuba-platform.com/commercial-software-license for details.
  -->

<definitions id="definitions"
             targetNamespace="http://activiti.org/bpmn20"
             xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL"
             xmlns:activiti="http://activiti.org/bpmn"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:cuba="http://schemas.haulmont.com/bpm/5.5/bpm.xsd">

    <process id="basicTest" name="Basic test">

        <extensionElements>
            <activiti:eventListener class="com.haulmont.bpm.core.engine.listener.BpmActivitiListener"/>
        </extensionElements>

        <startEvent id="start">
        </startEvent>

        <sequenceFlow id="flow1" sourceRef="start" targetRef="variablesScript" />

        <scriptTask id="variablesScript" scriptFormat="groovy">
            <script>
                execution.setVariable('userName', 'jack')
            </script>
        </scriptTask>

        <sequenceFlow id="flow2" sourceRef="variablesScript" targetRef="testScript" />

        <scriptTask id="testScript" scriptFormat="groovy">
            <script>
                def tx = persistence.createTransaction()
                try {
                    def em = persistence.getEntityManager();
                    def group = em.createQuery('select g from sec$Group g').getFirstResult()
                    def user = metadata.create(com.haulmont.cuba.security.entity.User.class)
                    user.setLogin(userName)
                    user.setGroup(group)
                    em.persist(user)
                    tx.commit()
                } finally {
                    tx.end()
                }
                System.out.println('From script: ' + metadata.NAME)
            </script>
        </scriptTask>

        <sequenceFlow id="flow3" sourceRef="testScript" targetRef="theEnd"/>

        <endEvent id="theEnd" />

    </process>

</definitions>